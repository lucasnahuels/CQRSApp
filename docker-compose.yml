version: '3.8'

services:
  cqrscommand:
    build:
      context: ./CQRSCommand
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - db
      - mongodb
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Database=mypostgreedatabase;Username=postgres;Password=admin
      - MongoDbSettings__ConnectionString=mongodb://mongodb:27017
      - MongoDbSettings__DatabaseName=mymongodbdatabase

  cqrsquery:
    build:
      context: ./CQRSQuery
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
      - "8091:8091"
    depends_on:
      - mongodb
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8090
      - MongoDbSettings__ConnectionString=mongodb://mongodb:27017
      - MongoDbSettings__DatabaseName=mymongodbdatabase

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: mypostgreedatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: mymongodbdatabase
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.runCommand({ ping: 1 })'"]
      interval: 10s
      timeout: 5s
      retries: 5
